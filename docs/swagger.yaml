basePath: /api
definitions:
  entities.URL:
    properties:
      created_at:
        type: string
      id:
        type: string
      original_url:
        type: string
      short_code:
        type: string
      user_id:
        type: string
    type: object
  http.createURLRequest:
    properties:
      custom_short:
        type: string
      long_url:
        type: string
    type: object
  http.registerRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample URL shortener service.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Go URL Shortener Service API
  version: "1.0"
paths:
  /{shortCode}:
    get:
      consumes:
      - application/json
      description: Redirects from a short code to its original long URL.
      parameters:
      - description: Short code of the URL
        in: path
        name: shortCode
        required: true
        type: string
      produces:
      - text/html
      responses:
        "301":
          description: Redirect to original URL
        "404":
          description: URL not found
          schema:
            additionalProperties: true
            type: object
      summary: Redirect to original URL
      tags:
      - urls
  /{shortCode}/qr:
    get:
      description: Generates and returns a QR code image for a given short URL.
      parameters:
      - description: Short code of the URL
        in: path
        name: shortCode
        required: true
        type: string
      produces:
      - image/png
      responses:
        "200":
          description: OK
          schema:
            type: file
        "404":
          description: URL not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get QR code for a short URL
      tags:
      - urls
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token.
      parameters:
      - description: User login details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/http.registerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User logged in successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Log in a user
      tags:
      - users
  /register:
    post:
      consumes:
      - application/json
      description: Registers a new user with a username and password.
      parameters:
      - description: User registration details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/http.registerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
      - users
  /urls:
    get:
      consumes:
      - application/json
      description: Retrieves all short URLs created by the authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: List of URLs
          schema:
            items:
              $ref: '#/definitions/entities.URL'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all URLs for a user
      tags:
      - urls
    post:
      consumes:
      - application/json
      description: Creates a new short URL, optionally with a custom short code.
      parameters:
      - description: URL creation details
        in: body
        name: url
        required: true
        schema:
          $ref: '#/definitions/http.createURLRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Short URL created successfully
          schema:
            $ref: '#/definitions/entities.URL'
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a short URL
      tags:
      - urls
  /urls/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a short URL by its ID for the authenticated user.
      parameters:
      - description: URL ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: URL deleted successfully
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a URL
      tags:
      - urls
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
