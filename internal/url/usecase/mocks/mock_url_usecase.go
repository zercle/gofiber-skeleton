// Code generated by MockGen. DO NOT EDIT.
// Source: url_usecase.go
//
// Generated by this command:
//
//	mockgen -source=url_usecase.go -destination=mocks/mock_url_usecase.go -package=mocks URLUseCase
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	url "gofiber-skeleton/internal/url"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockURLUseCase is a mock of URLUseCase interface.
type MockURLUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockURLUseCaseMockRecorder
	isgomock struct{}
}

// MockURLUseCaseMockRecorder is the mock recorder for MockURLUseCase.
type MockURLUseCaseMockRecorder struct {
	mock *MockURLUseCase
}

// NewMockURLUseCase creates a new mock instance.
func NewMockURLUseCase(ctrl *gomock.Controller) *MockURLUseCase {
	mock := &MockURLUseCase{ctrl: ctrl}
	mock.recorder = &MockURLUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLUseCase) EXPECT() *MockURLUseCaseMockRecorder {
	return m.recorder
}

// CreateURL mocks base method.
func (m *MockURLUseCase) CreateURL(ctx context.Context, originalURL, userID string) (*url.ModelURL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateURL", ctx, originalURL, userID)
	ret0, _ := ret[0].(*url.ModelURL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateURL indicates an expected call of CreateURL.
func (mr *MockURLUseCaseMockRecorder) CreateURL(ctx, originalURL, userID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateURL", reflect.TypeOf((*MockURLUseCase)(nil).CreateURL), ctx, originalURL, userID)
}

// GetOriginalURL mocks base method.
func (m *MockURLUseCase) GetOriginalURL(ctx context.Context, shortCode string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOriginalURL", ctx, shortCode)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOriginalURL indicates an expected call of GetOriginalURL.
func (mr *MockURLUseCaseMockRecorder) GetOriginalURL(ctx, shortCode any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOriginalURL", reflect.TypeOf((*MockURLUseCase)(nil).GetOriginalURL), ctx, shortCode)
}
