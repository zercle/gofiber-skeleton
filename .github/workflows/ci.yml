name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-and-lint:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mariadb:11
        env:
          MARIADB_ROOT_PASSWORD: password
          MARIADB_DATABASE: template_go_fiber
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'
        cache: 'go'

    - name: Download dependencies
      run: go mod download

    - name: Install linting tools
      run: |
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
        go install github.com/golang/mock/mockgen@latest

    - name: Generate code
      run: go generate ./...

    - name: Build
      run: go build -v ./...

    - name: Run linter
      run: golangci-lint run ./... --timeout=10m

    - name: Run tests
      run: |
        go test -v -race -coverprofile=coverage.out -covermode=atomic ./test/unit/...
        go test -v -race ./test/integration/...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  build-docker:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
