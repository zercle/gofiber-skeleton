name: Go CI

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}


permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-go@v6
      with:
        go-version: 'stable'

    - name: Install Dependencies
      run: |
        go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest
        go install github.com/swaggo/swag/cmd/swag@latest
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

    - name: Go Mod Tidy
      run: go mod tidy

    - name: sqlc generate
      run: sqlc generate

    - name: Swag Init
      run: swag init -g cmd/server/main.go --output ./docs

    - name: Install mockgen
      run: go install go.uber.org/mock/mockgen@latest

    - name: Go Generate
      run: go generate ./...

    - name: Start Docker Compose services
      run: docker-compose up -d postgres valkey

    - name: Wait for Postgres to be ready
      run: |
        for i in $(seq 1 10); do
          docker exec gofiber_postgres pg_isready -U postgres && break
          echo "Waiting for Postgres... $i"
          sleep 5
        done

    - name: Wait for Valkey to be ready
      run: |
        for i in $(seq 1 10); do
          docker exec gofiber_valkey valkey-cli ping && break
          echo "Waiting for Valkey... $i"
          sleep 5
        done

    - name: Run Migrations
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_NAME: gofiber_skeleton
        DB_SCHEMA: public
        DB_SSLMODE: disable
      run: |
        export MIGRATE_URL=$(printf "postgres://%s:%s@%s:%s/%s?sslmode=%s" \
          "$DB_USER" "$DB_PASSWORD" "$DB_HOST" "$DB_PORT" "$DB_NAME" "$DB_SSLMODE")
        go run cmd/migrate/main.go up

    - name: Run golangci-lint
      run: golangci-lint run --verbose

    - name: Run Tests
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_NAME: gofiber_skeleton
        DB_SCHEMA: public
        DB_SSLMODE: disable
        DB_URL: postgres://localhost:5432/gofiber_skeleton?sslmode=disable
        VALKEY_HOST: localhost
        VALKEY_PORT: 6379
        VALKEY_PASSWORD: ""
        VALKEY_DB: 0
        VALKEY_URL: redis://localhost:6379
        JWT_SECRET: test-secret
        JWT_EXPIRES_IN: 1h
      run: go test -v -race ./...

    - name: Build
      run: go build -o bin/server cmd/server/main.go