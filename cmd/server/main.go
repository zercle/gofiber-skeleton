package main

import (
	"log"

	"github.com/gofiber/fiber/v2"
	"github.com/gofiber/fiber/v2/middleware/cors"
	"github.com/gofiber/fiber/v2/middleware/logger"
	"github.com/gofiber/fiber/v2/middleware/recover"

	"gofiber-skeleton/internal/infra/config"
	"gofiber-skeleton/internal/infra/database"
	"gofiber-skeleton/pkg/app"

	_ "gofiber-skeleton/docs" // docs is generated by Swag CLI
	swagger "github.com/gofiber/swagger"
)

func main() {
	cfg, err := config.LoadConfig()
	if err != nil {
		log.Fatalf("Error loading configuration: %v", err)
	}

	db, err := database.NewDatabase(cfg.DatabaseURL)
	if err != nil {
		log.Fatalf("Error connecting to database: %v", err)
	}

	fiberApp := fiber.New()
	fiberApp.Use(recover.New())
	fiberApp.Use(cors.New())
	fiberApp.Use(logger.New())

	// Swagger UI
	fiberApp.Get("/swagger/*", swagger.New())

	application := app.NewApp(fiberApp, db, cfg)
	application.SetupRoutes()

	log.Printf("Starting server on port %s", cfg.AppPort)
	if err := fiberApp.Listen(":" + cfg.AppPort); err != nil {
		log.Fatalf("Error starting server: %v", err)
	}
}