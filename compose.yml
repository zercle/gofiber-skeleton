version: '3.9'

services:
  postgres:
    image: postgres:18-alpine
    container_name: gofiber_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: gofiber_skeleton
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gofiber_network

  redis:
    image: valkey/valkey:8-alpine
    container_name: gofiber_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gofiber_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gofiber_app
    ports:
      - "3000:3000"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: gofiber_skeleton
      REDIS_HOST: redis
      REDIS_PORT: 6379
      APP_ENV: development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - gofiber_network

volumes:
  postgres_data:
  redis_data:

networks:
  gofiber_network:
    driver: bridge
