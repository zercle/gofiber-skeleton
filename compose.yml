services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      # Load environment variables from .env file (if present) or .env.example
      # For production, these should be set directly in the deployment environment
      - PORT=${PORT:-8080}
      - DATABASE_DSN=${DATABASE_DSN:-host=db user=user password=password dbname=fiber_forum port=5432 sslmode=disable TimeZone=Asia/Shanghai}
      - JWT_SECRET=${JWT_SECRET:-supersecretjwtkey}
      - REDIS_URL=${REDIS_URL:-redis:6379}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

  db:
    image: postgres:18-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-fiber_forum}
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: valkey/valkey:8-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: valkey-server --save 60 1 --loglevel warning

volumes:
  db-data:
  redis-data: